#!/usr/bin/env gosh

(use gauche.interactive)
(use srfi-1)
(use tsm.proxy)

(define *server* "localhost")
(define *port* 8011)

(define (main args)
  (let-optionals* (cdr args) ((server *server*))
    (let ((tuple-space (tuple-space-connect #`"dsmp://,|server|:,|*port*|")))
      (do ((towers '() (cons (tuple-space-take tuple-space '((:tower _)))
                             towers))
           (hight 3))
          (#f)
        (p towers)
        (cond ((null? towers)
               (display "hight?: ")
               (flush)
               (set! hight (x->number (read))))
              ((= 3 (length towers))
               (let* ((left (cadr (pop! towers)))
                      (center (cadr (pop! towers)))
                      (right (cadr (pop! towers))))
                 (for-each (lambda (i)
                             (left "push" i))
                           (reverse (iota hight)))
                 (solve left center right hight))))
        (p 222)))))

;;; left -> right
(define (solve left center right hight)
  (cond ((zero? hight)
         (print "finished"))
        ((= 1 hight)
         (let ((circ (left "pop")))
           (right "push" circ))
         (print "left -> right"))
        (else
         (solve left right center (- hight 1))
         (let ((circ (left "pop")))
           (right "push" circ))
         (solve center left right (- hight 1)))))
